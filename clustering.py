# -*- coding: utf-8 -*-
"""clustering.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/192IkWvaRZGoaDd1Gfd187UsNcapB4xY2
"""

# import the pandas
import pandas as pd
data = pd.read_csv('studentclusters.csv')

data.head()

data.isnull().sum(axis=0)

x = data.copy()

# visualize the data using pandas
x.plot.scatter(x = 'marks', y = 'shours')

# Normalize the data using standard or min-max
from sklearn.preprocessing import minmax_scale
x_scaled = minmax_scale(x)
x_scaled

#  import KMeans
from sklearn.cluster import KMeans

kmeans = KMeans(n_clusters=3, random_state=1234)

kmeans.fit(x_scaled)
labels = kmeans.labels_

labels

# visualize the cluster
labels = pd.DataFrame(labels)
df = pd.concat([x,labels],axis=1)

df.columns

df = df.rename(columns={0:'labels'})

df.plot.scatter(x='marks',y = 'shours',c = 'labels',colormap='Set1')

# Elbow method
inertia = []
for i in range(2,15):
  kmeans = KMeans(n_clusters=i)
  kmeans.fit(x_scaled)
  inertia.append(kmeans.inertia_)

"""**inertia** is a sum of squared distance.
**Elbow method** plot used to understand distance between cluster

"""

inertia

import matplotlib.pyplot as plt

plt.plot(range(2,15),inertia, marker = 'o' )
plt.title('cluster')
plt.xlabel('number of cluster')
plt.ylabel('sum of squared (inertia)')